
CREATE TABLE SUMMONER (
    name varchar(255),
    account_id varchar(255),
    id varchar(255),
    profile_icon_id int,
    puuid varchar(255),
    summoner_level bigint,
    updated_at datetime,
    primary key(name)
);

CREATE TABLE LEAGUE (
    summoner_id varchar(255),
    queue_type varchar(255),
    league_id varchar(255),
    league_points int,
    losses int,
    rank1 varchar(255),
    summoner_name varchar(255),
    tier varchar(255),
    updated_at datetime,
    wins int,
    PRIMARY KEY(summoner_id, queue_type)
);

CREATE TABLE MATCH_INFO (
    id varchar(255),
    game_creation datetime,
    game_duration bigint,
    game_end_time datetime,
    game_id bigint,
    game_mode varchar(255),
    game_name varchar(255),
    game_start_time datetime,
    game_type varchar(255),
    game_version varchar(255),
    map_id int,
    platform_id varchar(255),
    queue_id int,
    tournament_code varchar(255),
    primary key(id)
);



CREATE TABLE PARTICIPANT (
  match_id varchar(255) NOT NULL,
  participant_id int NOT NULL,
  assists int NOT NULL,
  baron_kills int NOT NULL,
  bounty_level int NOT NULL,
  champ_experience int NOT NULL,
  champ_level int NOT NULL,
  champion_id int NOT NULL,
  champion_name varchar(255) DEFAULT NULL,
  champion_transform int NOT NULL,
  consumables_purchased int NOT NULL,
  damage_dealt_to_buildings int NOT NULL,
  damage_dealt_to_objectives int NOT NULL,
  damage_dealt_to_turrets int NOT NULL,
  damage_self_mitigated int NOT NULL,
  deaths int NOT NULL,
  detector_wards_placed int NOT NULL,
  double_kills int NOT NULL,
  dragon_kills int NOT NULL,
  first_blood_assist bit(1) NOT NULL,
  first_blood_kill bit(1) NOT NULL,
  first_tower_assist bit(1) NOT NULL,
  first_tower_kill bit(1) NOT NULL,
  game_ended_in_early_surrender bit(1) NOT NULL,
  game_ended_in_surrender bit(1) NOT NULL,
  gold_earned int NOT NULL,
  gold_spent int NOT NULL,
  individual_position varchar(255) DEFAULT NULL,
  inhibitor_kills int NOT NULL,
  inhibitor_takedowns int NOT NULL,
  inhibitors_lost int NOT NULL,
  item0 int NOT NULL,
  item1 int NOT NULL,
  item2 int NOT NULL,
  item3 int NOT NULL,
  item4 int NOT NULL,
  item5 int NOT NULL,
  item6 int NOT NULL,
  items_purchased int NOT NULL,
  killing_sprees int NOT NULL,
  kills int NOT NULL,
  lane varchar(255) DEFAULT NULL,
  largest_critical_strike int NOT NULL,
  largest_killing_spree int NOT NULL,
  largest_multi_kill int NOT NULL,
  longest_time_spent_living int NOT NULL,
  magic_damage_dealt int NOT NULL,
  magic_damage_dealt_to_champions int NOT NULL,
  magic_damage_taken int NOT NULL,
  neutral_minions_killed int NOT NULL,
  nexus_kills int NOT NULL,
  nexus_lost int NOT NULL,
  nexus_takedowns int NOT NULL,
  objectives_stolen int NOT NULL,
  objectives_stolen_assists int NOT NULL,
  penta_kills int NOT NULL,
  physical_damage_dealt int NOT NULL,
  physical_damage_dealt_to_champions int NOT NULL,
  physical_damage_taken int NOT NULL,
  puuid varchar(255) DEFAULT NULL,
  quadra_kills int NOT NULL,
  role_ varchar(255) DEFAULT NULL,
  sight_wards_bought_in_game int NOT NULL,
  spell1_casts int DEFAULT NULL,
  spell2_casts int DEFAULT NULL,
  spell3_casts int DEFAULT NULL,
  spell4_casts int DEFAULT NULL,
  summoner1_casts int DEFAULT NULL,
  summoner1_id int DEFAULT NULL,
  summoner2_casts int DEFAULT NULL,
  summoner2_id int DEFAULT NULL,
  summoner_id varchar(255) DEFAULT NULL,
  summoner_level int NOT NULL,
  summoner_name varchar(255) DEFAULT NULL,
  team_early_surrendered bit(1) NOT NULL,
  team_id int NOT NULL,
  team_position varchar(255) DEFAULT NULL,
  time_ccing_others int DEFAULT NULL,
  time_played int NOT NULL,
  total_damage_dealt int NOT NULL,
  total_damage_dealt_to_champions int NOT NULL,
  total_damage_shielded_on_teammates int NOT NULL,
  total_damage_taken int NOT NULL,
  total_heal int NOT NULL,
  total_heals_on_teammates int NOT NULL,
  total_minions_killed int NOT NULL,
  total_time_cc_dealt int DEFAULT NULL,
  total_time_spent_dead int NOT NULL,
  total_units_healed int NOT NULL,
  triple_kills int NOT NULL,
  true_damage_dealt int NOT NULL,
  true_damage_dealt_to_champions int NOT NULL,
  true_damage_taken int NOT NULL,
  turret_kills int NOT NULL,
  turret_takedowns int NOT NULL,
  turrets_lost int NOT NULL,
  unreal_kills int NOT NULL,
  vision_score int NOT NULL,
  vision_wards_bought_in_game int NOT NULL,
  wards_killed int NOT NULL,
  wards_placed int NOT NULL,
  win bit(1) NOT NULL,
  PRIMARY KEY (participant_id, match_id),
  FOREIGN KEY (match_id) REFERENCES match_info (id)
);

CREATE TABLE PERK_PRIMARY (
    participant_id int,
    match_id varchar(255),
    perk1 int,
    perk2 int,
    perk3 int,
    perk4 int,
    style int,
    var11 int,
    var12 int,
    var13 int,
    var21 int,
    var22 int,
    var23 int,
    var31 int,
    var32 int,
    var33 int,
    var41 int,
    var42 int,
    var43 int,
    primary key(participant_id, match_id)
);

CREATE TABLE PERK_SUB (
    participant_id int,
    match_id varchar(255),
    perk1 int,
    perk2 int,
    style int,
    var11 int,
    var12 int,
    var13 int,
    var21 int,
    var22 int,
    var23 int,
    primary key(participant_id, match_id)
);

CREATE TABLE TEAM (
    team_id int,
    match_id varchar(255),
    first_baron bit(1),
    first_champion bit(1),
    first_dragon bit(1),
    first_inhibitor bit(1),
    first_rift_herald bit(1),
    first_tower bit(1),
    kills_baron int,
    kills_champion int,
    kills_dragon int,
    kills_inhibitor int,
    kills_rift_herald int,
    kills_tower int,
    win bit(1),
    primary key(team_id, match_id)
);

CREATE TABLE BAN (
    team_id int,
    pick_turn int,
    match_id varchar(255),
    champion_id int,
    primary key(team_id, pick_turn, match_id)
);

CREATE TABLE _USER (
    id bigint auto_increment primary key,
    social_id varchar(255),
    nickname varchar(50) unique,
    social_type varchar(10),
    created_at datetime,
    updated_at datetime
);

CREATE TABLE POST (
    id bigint auto_increment primary key,
    user_id bigint,
    title varchar(100),
    content varchar(300),
    created_at datetime,
    updated_at datetime,
    foreign key(user_id) references _user(id)
);